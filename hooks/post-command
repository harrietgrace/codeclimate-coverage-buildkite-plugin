#!/usr/bin/env bash

set -euo pipefail

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"
source "$DIR/../lib/shared.bash"

if [ -v BUILDKITE_PLUGIN_CODECLIMATE_COVERAGE_SUM_AND_UPLOAD ]; then
  echo '+++ :codeclimate: Download coverage artifacts'
  mkdir -p coverage
  # TODO: Config path filename
  buildkite-agent artifact download coverage/* coverage/

  echo '+++ :codeclimate: Codeclimate upload'
  ./cc-test-reporter sum-coverage --output coverage/codeclimate_coverage_aggregate.json coverage/codeclimate_*.json
  ./cc-test-reporter upload-coverage --input coverage/codeclimate_coverage_aggregate.json
else
  prefix="${BUILDKITE_PLUGIN_CODECLIMATE_COVERAGE_PREFIX:-/workdir}"

  if [ -v BUILDKITE_PARALLEL_JOB ]; then
    echo '--- :codeclimate: Formatting codeclimate coverage report'
    ./cc-test-reporter format-coverage --output "coverage/codeclimate_${BUILDKITE_PARALLEL_JOB}.json" --prefix "$prefix"
  else
    echo '--- :codeclimate: Codeclimate After-Build'
    ./cc-test-reporter after-build --exit-code "$BUILDKITE_COMMAND_EXIT_STATUS" --prefix "$prefix" --debug
  fi
fi
