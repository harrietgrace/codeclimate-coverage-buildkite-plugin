#!/usr/bin/env bash

set -eu

# TODO: Config version
# TODO: Find a way to move this to a common place
function install_test_reporter() {
  if [ -f ./cc-test-reporter ]; then
    echo "--- :codeclimate: Using existing Codeclimate reporter"
  else
    echo "--- :codeclimate: Installing Codeclimate reporter"
    curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    chmod +x ./cc-test-reporter
  fi
}

# source "$(dirname $0)/common"

install_test_reporter

if [ -v BUILDKITE_PLUGIN_CODECLIMATE_COVERAGE_UPLOAD ]; then
  echo '+++ :codeclimate: Download coverage artifacts'
  mkdir coverage
  # TODO: Config path filename
  buildkite-agent artifact download coverage/* coverage/

  echo '+++ :codeclimate: Codeclimate upload'
  ./cc-test-reporter sum-coverage --output coverage/codeclimate_coverage_aggregate.json coverage/codeclimate_*.json
  ./cc-test-reporter upload-coverage --input coverage/codeclimate_coverage_aggregate.json
else
  if [ -v BUILDKITE_PARALLEL_JOB ]; then
    echo '--- :codeclimate: Formatting codeclimate coverage report'
    env
    prefix="${BUILDKITE_PLUGIN_CODECLIMATE_COVERAGE_PREFIX:-/workdir}"
    echo "Prefix: $prefix"
    ./cc-test-reporter format-coverage --output "coverage/codeclimate_${BUILDKITE_PARALLEL_JOB}.json" --prefix $prefix
  else
    echo '--- :codeclimate: Codeclimate After-Build'
    ./cc-test-reporter after-build --exit-code $BUILDKITE_COMMAND_EXIT_STATUS --prefix "${BUILDKITE_PLUGIN_CODECLIMATE_COVERAGE_PREFIX:-/workdir}"
  fi
fi
